import numpy as np
test_array = np.array(['1','4',600,8], float)
test_array

print(type(test_array))
print(type(test_array[3]))
print(test_array.shape)

t_ar = np.array([[1,7,2],[3,4,4]], int)
t_ar.shape

t_ar2 = np.array([[[1,2,3],[4,2,3]],
                  [[2,3,1],[1,5,3]],
                  [[5,7,3],[3,8,6]],
                  [[7,1,4],[6,2,0]]])
t_ar2.shape

t_ar2.reshape(2,12)

t_ar2.reshape(-1,3) # -1이라 적으면 데이터의 갯수에 맞춰서 3dimentional array로 알아서 바꿔줌

print(t_ar)
t_ar.flatten() # 1차원으로 쫙 펴줌

t_ar[0][0]=6
t_ar[1,0]=9 # =t_ar[1][0]
t_ar

t_ar2

t_ar2[1:4,0,1:3]

t_ar2[2,0:2,1]

np.arange(30)

np.arange(30).reshape(-1,6)

np.zeros(shape=(10,), dtype=np.int8)

np.ones((2,5))

t_ar3 = np.arange(18).reshape(3,6)
t_ar3

t_ar3.sum(axis=0)

k = t_ar3.sum(axis=1)
k

k **2 # broadcasting

t_ar3 + 3 # broadcasting

t_ar3

t_ar3 + np.array([2,3,4,5,6,7])

t_ar3 > 8

np.where(t_ar3 > 8, 1, 0)

m = np.array([2,6,0,8,3,3,5,1,9])

np.where(m>4) # index

m[m>4] # index의 element

np.argmax(m), np.argmin(m)

a = np.array([5,8,9,7])
b = np.array([0,2,3,3,1,2,0])
a[b] # b가 index를 가리킴

a.take(b)